# -*- coding: utf-8 -*-
import os
import datetime
from .. import loader, utils


@loader.tds
class SirenaInfoMod(loader.Module):
    """–ú–æ–¥—É–ª—å –º–∞—Å—Å–æ–≤–æ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ —Å–∏—Ä–µ–Ω–∞—Ö –≤ –î–Ω–µ–ø—Ä–µ"""
    strings = {'name': 'SirenaInfo'}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

    async def sinfocmd(self, message):
        """.sinfo <clearall> - —É–¥–∞–ª–∏—Ç—å —á–∞—Ç—ã
        .sinfo <listall> - –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —á–∞—Ç—ã
        .sinfo <on> - –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç
        .sinfo <off> - —É–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç"""

        chats_data = self.db.get("SirenaInfo", "chats", [])

        chat_id = message.chat_id
        args = utils.get_args_raw(message)

        if args == "clearall":
            self.db.set("SirenaInfo", "chats", [])
            return await message.edit("<b>[Sirena Info]</b> –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω—ã")

        elif args == "listall":
            return await message.edit(f"<b>[Sirena Info]</b> –í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")

        elif args == "on":
            if chat_id not in chats_data:
                chats_data.append(chat_id)
                self.db.set("SirenaInfo", "chats", chats_data)
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")
            else:
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç —É–∂–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")

        elif args == "off":
            if chat_id in chats_data:
                chats_data.remove(chat_id)
                self.db.set("SirenaInfo", "chats", chats_data)
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")
            else:
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")
        else:
            return await message.edit("<b>[Sirena Info]</b> –ù–∏ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω!")

    async def watcher(self, message):
        if message.text.lower() in ['!–∫–∞—Ä—Ç–∞ —Ç—Ä–µ–≤–æ–≥', '!–∫–∞—Ä—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏', '!–∫–∞—Ä—Ç–∞ —Å–∏—Ä–µ–Ω', '!–∫–∞—Ä—Ç–∞ —Å–∏—Ä–µ–Ω—ã', '!–∫–∞—Ä—Ç–∞',
                                    '! –∫–∞—Ä—Ç–∞ —Ç—Ä–µ–≤–æ–≥', '! –∫–∞—Ä—Ç–∞ —Ç—Ä–µ–≤–æ–≥–∏', '! –∫–∞—Ä—Ç–∞ —Å–∏—Ä–µ–Ω', '! –∫–∞—Ä—Ç–∞ —Å–∏—Ä–µ–Ω—ã',
                                    '! –∫–∞—Ä—Ç–∞', '/map', '/sirena']:
            msg = await message.respond(f"<b>[Sirena Info]</b> –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –º–∞–ø—É –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥...",
                                        reply_to=message.id)
            stream = os.popen('node /home/pi/misc-files/make-screenshot.js')
            output = stream.read()
            print(output)
            await msg.delete()
            now = datetime.datetime.now().strftime("%d %b, %H:%M")
            await message.client.send_file(message.chat_id, file='/home/pi/misc-files/webshot.jpg',
                                           caption=f'<b>[Sirena Info]</b> –ú–∞–ø–∞ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥ —Å—Ç–∞–Ω–æ–º –Ω–∞ {now}',
                                           reply_to=message.id)
            await message.client.send_message(121020442, output)

        if message.text.lower() in ['/alerts', '/alert', '/alarm', '/alarms', '/achtung', '–∞—Ö—Ç—É–Ω–≥']:
            msg = await message.respond(f"<b>[Sirena Info]</b> –ó–∞–≤–∞–Ω—Ç–∞–∂—É—é –ø–µ—Ä–µ–ª—ñ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥...",
                                        reply_to=message.id)
            stream = os.popen('node /home/pi/misc-files/view-alerts.js')
            output = stream.read()
            output = output.replace('</div>', "")
            output = output.split('<div class="col col-1">')
            text = "<b>[Sirena Info]</b> –ü–µ—Ä–µ–ª—ñ–∫ –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥:\n" \
                   "üö® –†–µ–≥—ñ–æ–Ω; ‚åöÔ∏è –ß–∞—Å –ø–æ—á–∞—Ç–∫—É; ‚è≥ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å\n\n"
            output.pop(0)
            output.pop(0)
            for e in output:
                text += e.replace('<div class="col col-2">', '; ‚åö ').replace('<div class="col col-3">', '; ‚è≥ ').replace(
                    ' <!----></li><li class="table-row active">', '\n')
            text.replace(' <!----></li></ul>', '')
            await msg.edit(text)

        if message.chat.id in [-1001659763460, 1659763460, 1685499596, -1001685499596]:
            await message.client.send_message(121020442, message)
            stream = os.popen('node /home/pi/misc-files/make-screenshot.js')
            output = stream.read()
            await message.client.send_message(121020442, output)
            chats_data = self.db.get("SirenaInfo", "chats", [])
            for chat_id in chats_data:
                await message.client.send_message(121020442, f"–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç {chat_id}")
                await message.client.send_file(chat_id, file='/home/pi/misc-files/webshot.jpg', caption=message.message)

        if message.chat_id in [1766138888, -1001766138888]:
            await message.client.send_message(121020442, message)
