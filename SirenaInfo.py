# -*- coding: utf-8 -*-
from .. import loader, utils
import io
import requests
import datetime


@loader.tds
class SirenaInfoMod(loader.Module):
    """–ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ —Å–∏—Ä–µ–Ω–∞—Ö –≤ –î–Ω–µ–ø—Ä–µ"""
    strings = {'name': 'SirenaInfo'}

    async def client_ready(self, client, db):
        self.db = db
        self.client = client

    async def sinfocmd(self, message):
        """–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ —Å–∏—Ä–µ–Ω—ã.
        –ò—Å–ø–æ–ª—å–∑—É–π:
        .sirenainfo <clearall>
        .sirenainfo <listall>
        .sirenainfo <on>
        .sirenainfo <off> """

        chats_data = self.db.get("SirenaInfo", "chats", [])

        chat_id = message.chat_id
        args = utils.get_args_raw(message)
        if args == "clearall":
            self.db.set("SirenaInfo", "chats", [])
            return await message.edit("<b>[Sirena Info]</b> –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω—ã")

        elif args == "listall":
            return await message.edit(f"<b>[Sirena Info]</b> –í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")

        elif args == "on":
            if chat_id in chats_data:
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç —É–∂–µ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")
            else:
                chats_data.append(chat_id)
                self.db.set("SirenaInfo", "chats", chats_data)
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")

        elif args == "off":
            if chat_id in chats_data:
                chats_data.pop(chat_id)
                self.db.set("SirenaInfo", "chats", chats_data)
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")
            else:
                return await message.edit(f"<b>[Sirena Info]</b> –ß–∞—Ç —É–∂–µ –±—ã–ª —É–¥–∞–ª–µ–Ω!\n\n"
                                          f"–í—Å–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n{chats_data}")

        return await message.edit("<b>[Sirena Info]</b> –ù–∏ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω!")

    async def watcher(self, message):
        """–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø–æ—á–µ–º—É –æ–Ω –∏–º–µ–Ω–Ω–æ watcher –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è... ü§î"""
        if message.chat_id in [-1001659763460, -1001685499596]:
        # if message.chat_id == 121020442:
            chats_data = self.db.get("SirenaInfo", "chats", [])
            # chats_data = [121020442,]
            file = requests.get(
                "https://shot.screenshotapi.net/screenshot?&url=https%3A%2F%2Fwar.ukrzen.in.ua%2Falerts%2F%3F" + str(
                    datetime.datetime.now().timestamp()) + "&width=1400&height=1000&output=image&file_type=png&wait_for_event=load")
            file = io.BytesIO(file.content)
            file.name = "webshot.png"
            file.seek(0)
            print(message.text)

            for chat_id in chats_data:
                await message.client.send_file(chat_id, file, caption=message.message)
                print('–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç—Ä–µ–≤–æ–≥–µ')
